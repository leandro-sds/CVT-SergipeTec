/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import br.com.parg.viacep.ViaCEP;
import br.com.parg.viacep.ViaCEPException;
import connection.ConnectionFactory;
import model.bean.Aluno;
import model.dao.AlunoDAO;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.io.IOException;
import java.net.URL;
import java.sql.Connection;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.bean.Curso;
import model.bean.Professor;
import model.bean.Responsavel;
import model.bean.Turma;
import model.dao.CursoDAO;
import model.dao.ProfessorDAO;
import model.dao.TurmaDAO;
import model.dao.ResponsavelDAO;
import org.json.JSONArray;
import org.json.JSONObject;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;

/**
 *
 * @author rodrygo.matos
 */
public class SistemaDeCadastro extends javax.swing.JFrame {
    static Boolean setNovoResponsavel;
    /**
     * Creates new form Tela
     */
    public SistemaDeCadastro() {
        initComponents();
        DefaultTableModel modelo = (DefaultTableModel) tableCTurma.getModel();
        tableCTurma.setRowSorter(new TableRowSorter(modelo));


    }

    public void readTable(String nomeConsulta) {
        DefaultTableModel modelo = (DefaultTableModel) tableCTurma.getModel();
        modelo.setNumRows(0);
        CursoDAO cdao = new CursoDAO();
        cdao.show(nomeConsulta);

        cdao.show(nomeConsulta).forEach((c) -> {
            modelo.addRow(new Object[]{
                c.getCodCurso(),
                c.getNomeCurso()
            });
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroupSexoProfessor = new javax.swing.ButtonGroup();
        painelPrincipal = new javax.swing.JPanel();
        painelGuiasAluno = new javax.swing.JTabbedPane();
        painelDadosPessoais = new javax.swing.JPanel();
        labelNome = new javax.swing.JLabel();
        campoNome = new javax.swing.JTextField();
        labelSexo = new javax.swing.JLabel();
        radioMasc = new javax.swing.JRadioButton();
        radioFem = new javax.swing.JRadioButton();
        radioOutro = new javax.swing.JRadioButton();
        labelNaturalidade = new javax.swing.JLabel();
        estadoBox = new javax.swing.JComboBox<>();
        cidadeBox = new javax.swing.JComboBox<>();
        labelDataNascimento = new javax.swing.JLabel();
        campoDataNascimento = new javax.swing.JFormattedTextField();
        labelCPF = new javax.swing.JLabel();
        campoCPF = new javax.swing.JTextField();
        labelRG = new javax.swing.JLabel();
        campoRG = new javax.swing.JTextField();
        labelFiliacao = new javax.swing.JLabel();
        labelMae = new javax.swing.JLabel();
        labelPai = new javax.swing.JLabel();
        campoMae = new javax.swing.JTextField();
        campoPai = new javax.swing.JTextField();
        labelTelefone = new javax.swing.JLabel();
        campoTel1 = new javax.swing.JTextField();
        campoTel2 = new javax.swing.JTextField();
        labelEndereco = new javax.swing.JLabel();
        labelRua = new javax.swing.JLabel();
        CampoRua = new javax.swing.JTextField();
        labelN = new javax.swing.JLabel();
        campoNumero = new javax.swing.JTextField();
        labelComplemento = new javax.swing.JLabel();
        campoComplemento = new javax.swing.JTextField();
        labelBairro = new javax.swing.JLabel();
        campoBairro = new javax.swing.JTextField();
        labelEstado = new javax.swing.JLabel();
        campoEstado = new javax.swing.JTextField();
        labelCidade = new javax.swing.JLabel();
        campoCidade = new javax.swing.JTextField();
        labelCEP = new javax.swing.JLabel();
        campoCEP = new javax.swing.JTextField();
        painelDadosProfissionais = new javax.swing.JPanel();
        radioDP1 = new javax.swing.JRadioButton();
        radioDP2 = new javax.swing.JRadioButton();
        radioDP3 = new javax.swing.JRadioButton();
        radioDP4 = new javax.swing.JRadioButton();
        radioDP5 = new javax.swing.JRadioButton();
        radioDP7 = new javax.swing.JRadioButton();
        campoOutro = new javax.swing.JTextField();
        radioDP6 = new javax.swing.JRadioButton();
        labelDadosEscolares = new javax.swing.JLabel();
        labelDadosProfissionais = new javax.swing.JLabel();
        boxDadosEscolares = new javax.swing.JComboBox<>();
        painelDadosResponsavel = new javax.swing.JPanel();
        labelNomeResponsavel = new javax.swing.JLabel();
        campoNomeResponsavel = new javax.swing.JTextField();
        labelCPFResponsavel = new javax.swing.JLabel();
        campoCPFResponsavel = new javax.swing.JTextField();
        labelRGResponsavel = new javax.swing.JLabel();
        campoRGResponsavel = new javax.swing.JTextField();
        botaoProximo = new javax.swing.JButton();
        jButtonVerificaRespCPF = new javax.swing.JButton();
        painelCadastroProfessor = new javax.swing.JPanel();
        labelTelefone1 = new javax.swing.JLabel();
        campoTelefone1Prof = new javax.swing.JTextField();
        campoTelefone2Prof = new javax.swing.JTextField();
        labelEndereco1 = new javax.swing.JLabel();
        labelRua1 = new javax.swing.JLabel();
        CampoRua1 = new javax.swing.JTextField();
        labelN1 = new javax.swing.JLabel();
        radioProfOutro = new javax.swing.JRadioButton();
        campoNumProf = new javax.swing.JTextField();
        labelComplemento1 = new javax.swing.JLabel();
        campoComplementoProf = new javax.swing.JTextField();
        labelBairro1 = new javax.swing.JLabel();
        labelDataNascimento1 = new javax.swing.JLabel();
        campoBairro1 = new javax.swing.JTextField();
        campoDataNascProf = new javax.swing.JFormattedTextField();
        labelEstado1 = new javax.swing.JLabel();
        labelCPF1 = new javax.swing.JLabel();
        campoEstado1 = new javax.swing.JTextField();
        campoCPFProf = new javax.swing.JTextField();
        labelCidade1 = new javax.swing.JLabel();
        labelRG1 = new javax.swing.JLabel();
        campoRGProf = new javax.swing.JTextField();
        labelNome1 = new javax.swing.JLabel();
        campoNomeProf = new javax.swing.JTextField();
        labelSexo1 = new javax.swing.JLabel();
        radioProfMasc = new javax.swing.JRadioButton();
        radioProfFem = new javax.swing.JRadioButton();
        campoCidade1 = new javax.swing.JTextField();
        labelCEP1 = new javax.swing.JLabel();
        campoCepProf = new javax.swing.JTextField();
        botaoCadastroProf = new javax.swing.JButton();
        labelRGUFProf = new javax.swing.JLabel();
        campoRGUFProf = new javax.swing.JTextField();
        painelCursoTurma = new javax.swing.JPanel();
        labelNomeCurso = new javax.swing.JLabel();
        campoNomeCurso = new javax.swing.JTextField();
        botaoCadastrarCurso = new javax.swing.JToggleButton();
        botaoCadastrarTurma = new javax.swing.JToggleButton();
        labelQntVagas = new javax.swing.JLabel();
        campoQntVagas = new javax.swing.JTextField();
        labelDiaTurma = new javax.swing.JLabel();
        checkboxSegCursoTurma = new javax.swing.JCheckBox();
        checkboxTerCursoTurma = new javax.swing.JCheckBox();
        checkboxQuaCursoTurma = new javax.swing.JCheckBox();
        checkboxSexCursoTurma = new javax.swing.JCheckBox();
        checkboxQuiCursoTurma = new javax.swing.JCheckBox();
        checkboxSabCursoTurma = new javax.swing.JCheckBox();
        campoHoraInicioSegCursoTurma = new javax.swing.JFormattedTextField();
        campoHoraFimSegCursoTurma = new javax.swing.JFormattedTextField();
        campoHoraInicioTerCursoTurma = new javax.swing.JFormattedTextField();
        campoHoraFimTerCursoTurma = new javax.swing.JFormattedTextField();
        campoHoraInicioQuaCursoTurma = new javax.swing.JFormattedTextField();
        campoHoraFimQuaCursoTurma = new javax.swing.JFormattedTextField();
        campoHoraInicioQuiCursoTurma = new javax.swing.JFormattedTextField();
        campoHoraFimQuiCursoTurma = new javax.swing.JFormattedTextField();
        campoHoraInicioSexCursoTurma = new javax.swing.JFormattedTextField();
        campoHoraFimSexCursoTurma = new javax.swing.JFormattedTextField();
        campoHoraInicioSabCursoTurma = new javax.swing.JFormattedTextField();
        campoHoraFimSabCursoTurma = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        labelProfessorTurma = new javax.swing.JLabel();
        boxProfessor = new javax.swing.JComboBox<>();
        try {
            Class.forName("com.mysql.jdbc.Driver");

            Connection connection = DriverManager.getConnection("jdbc:mysql://192.168.0.26:3306/cvt?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC&autoReconnect=true&useSSL=false",
                "sergipetec", "Sergipetec@@2010");

            Statement statement = connection.createStatement();
            String query = "SELECT * FROM Professores";
            ResultSet rs = statement.executeQuery(query);

            while (rs.next()){
                String st = "(" + rs.getInt("codProf") + ") " + rs.getString("nome");
                boxProfessor.addItem(st);
            }//end while

            connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        jLabel4 = new javax.swing.JLabel();
        jComboBoxCursos = new javax.swing.JComboBox<>();
        try {
            Class.forName("com.mysql.jdbc.Driver");

            Connection connection = DriverManager.getConnection("jdbc:mysql://192.168.0.26:3306/cvt?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC&autoReconnect=true&useSSL=false",
                "sergipetec", "Sergipetec@@2010");

            Statement statement = connection.createStatement();
            String query = "SELECT * FROM Cursos";
            ResultSet rs = statement.executeQuery(query);

            while (rs.next()){
                String st = "(" + rs.getInt("codCurso") + ") " + rs.getString("nomeCurso");
                jComboBoxCursos.addItem(st);
            }//end while

            connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        painelConsultaAluno = new javax.swing.JPanel();
        scrollPaneTAluno = new javax.swing.JScrollPane();
        tableAluno = new javax.swing.JTable();
        labelConsultaNomeAluno = new javax.swing.JLabel();
        botaoConsultaAluno = new javax.swing.JButton();
        campoConsultaNomeAluno = new javax.swing.JTextField();
        labelConsultaCPFAluno = new javax.swing.JLabel();
        campoConsultaCPFAluno = new javax.swing.JTextField();
        labelConsultaRGAluno = new javax.swing.JLabel();
        campoConsultaRGAluno = new javax.swing.JTextField();
        labelConsultaMatAluno = new javax.swing.JLabel();
        campoConsultaMatAluno = new javax.swing.JTextField();
        painelConsultaCursoTurmaAlunos = new javax.swing.JPanel();
        ScrollPaneCurso2 = new javax.swing.JScrollPane();
        tableConsultarCursoTA = new javax.swing.JTable();
        ScrollPaneTurma2 = new javax.swing.JScrollPane();
        tableCTurma = new javax.swing.JTable();
        scrollPaneAluno2 = new javax.swing.JScrollPane();
        tableCTAluno = new javax.swing.JTable();
        consultarCursoTA = new javax.swing.JButton();
        nomeCursoConsulta = new javax.swing.JLabel();
        consultarConsultarCurso = new javax.swing.JButton();
        campoConsultarCurso = new javax.swing.JTextField();
        labelCodCurso = new javax.swing.JLabel();
        campoCodCurso = new javax.swing.JTextField();
        botaoConsultarTurma = new javax.swing.JToggleButton();
        painelConsultaProfessor = new javax.swing.JPanel();
        scrollPaneTAluno1 = new javax.swing.JScrollPane();
        tableAluno1 = new javax.swing.JTable();
        labelConsultaNomeAluno1 = new javax.swing.JLabel();
        botaoConsultaAluno1 = new javax.swing.JButton();
        campoConsultaNomeProfessor = new javax.swing.JTextField();
        labelConsultaCPFAluno1 = new javax.swing.JLabel();
        campoConsultaCPFProfessor = new javax.swing.JTextField();
        labelConsultaRGAluno1 = new javax.swing.JLabel();
        campoConsultaRGProfessor = new javax.swing.JTextField();
        labelConsultaMatAluno1 = new javax.swing.JLabel();
        campoConsultaMatProfessor = new javax.swing.JTextField();
        barraMenu = new javax.swing.JMenuBar();
        menuCadastrar = new javax.swing.JMenu();
        cadastrarAluno = new javax.swing.JMenuItem();
        cadastrarProfessor = new javax.swing.JMenuItem();
        cadastrarCursoTurma = new javax.swing.JMenuItem();
        menuConsultar = new javax.swing.JMenu();
        menuConsultarAlunos = new javax.swing.JMenuItem();
        menuConsultarProfessor = new javax.swing.JMenuItem();
        menuConsultarCursosTurmas = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(430, 600));

        painelPrincipal.setLayout(new java.awt.CardLayout());

        labelNome.setText("Nome");

        campoNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNomeActionPerformed(evt);
            }
        });

        labelSexo.setText("Sexo");

        buttonGroup1.add(radioMasc);
        radioMasc.setText("Masculino");

        buttonGroup1.add(radioFem);
        radioFem.setText("Feminino");

        buttonGroup1.add(radioOutro);
        radioOutro.setText("Outro");
        radioOutro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioOutroItemStateChanged(evt);
            }
        });
        radioOutro.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                radioOutroStateChanged(evt);
            }
        });
        radioOutro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioOutroActionPerformed(evt);
            }
        });

        labelNaturalidade.setText("Naturalidade");

        estadoBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um estado", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RP", "SC", "SP", "SE", "TO" }));
        estadoBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                estadoBoxItemStateChanged(evt);
            }
        });
        estadoBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadoBoxActionPerformed(evt);
            }
        });

        cidadeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cidadeBoxActionPerformed(evt);
            }
        });

        labelDataNascimento.setText("Data de Nascimento");

        campoDataNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));

        labelCPF.setText("CPF");

        labelRG.setText("RG");

        campoRG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoRGActionPerformed(evt);
            }
        });

        labelFiliacao.setText("Filiação");

        labelMae.setText("Mãe");

        labelPai.setText("Pai");

        labelTelefone.setText("Telefone(s) para Contato");

        labelEndereco.setText("Endereço");

        labelRua.setText("Av./Rua");

        CampoRua.setEditable(false);

        labelN.setText("Nº");

        labelComplemento.setText("Complemento");

        labelBairro.setText("Bairro");

        campoBairro.setEditable(false);

        labelEstado.setText("Estado");

        campoEstado.setEditable(false);

        labelCidade.setText("Cidade");

        campoCidade.setEditable(false);

        labelCEP.setText("CEP");

        campoCEP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoCEPFocusLost(evt);
            }
        });
        campoCEP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCEPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelDadosPessoaisLayout = new javax.swing.GroupLayout(painelDadosPessoais);
        painelDadosPessoais.setLayout(painelDadosPessoaisLayout);
        painelDadosPessoaisLayout.setHorizontalGroup(
            painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosPessoaisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelDadosPessoaisLayout.createSequentialGroup()
                        .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelDadosPessoaisLayout.createSequentialGroup()
                                .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelMae)
                                    .addComponent(labelPai))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoPai)
                                    .addComponent(campoMae)))
                            .addGroup(painelDadosPessoaisLayout.createSequentialGroup()
                                .addComponent(labelNome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoNome, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE))
                            .addGroup(painelDadosPessoaisLayout.createSequentialGroup()
                                .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelFiliacao)
                                    .addComponent(labelTelefone)
                                    .addComponent(campoTel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(painelDadosPessoaisLayout.createSequentialGroup()
                                        .addGap(207, 207, 207)
                                        .addComponent(campoTel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(labelEndereco)
                                    .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelDadosPessoaisLayout.createSequentialGroup()
                                            .addGap(205, 205, 205)
                                            .addComponent(labelRG)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(campoRG, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(painelDadosPessoaisLayout.createSequentialGroup()
                                            .addComponent(labelCPF)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(campoCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(painelDadosPessoaisLayout.createSequentialGroup()
                                        .addComponent(labelSexo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(radioMasc)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(radioFem)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(radioOutro))
                                    .addGroup(painelDadosPessoaisLayout.createSequentialGroup()
                                        .addComponent(labelNaturalidade)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(estadoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cidadeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(painelDadosPessoaisLayout.createSequentialGroup()
                                        .addComponent(labelDataNascimento)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(campoDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(painelDadosPessoaisLayout.createSequentialGroup()
                                        .addComponent(labelCEP)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(campoCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(21, 21, 21))
                    .addGroup(painelDadosPessoaisLayout.createSequentialGroup()
                        .addComponent(labelEstado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelCidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(painelDadosPessoaisLayout.createSequentialGroup()
                        .addComponent(labelBairro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelRua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CampoRua)
                        .addContainerGap())
                    .addGroup(painelDadosPessoaisLayout.createSequentialGroup()
                        .addComponent(labelN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelComplemento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoComplemento)
                        .addGap(128, 128, 128))))
        );
        painelDadosPessoaisLayout.setVerticalGroup(
            painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosPessoaisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNome)
                    .addComponent(campoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSexo)
                    .addComponent(radioMasc)
                    .addComponent(radioFem)
                    .addComponent(radioOutro))
                .addGap(18, 18, 18)
                .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNaturalidade)
                    .addComponent(estadoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cidadeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDataNascimento)
                    .addComponent(campoDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCPF)
                    .addComponent(labelRG)
                    .addComponent(campoCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(labelFiliacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMae)
                    .addComponent(campoMae, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPai)
                    .addComponent(campoPai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(labelTelefone)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoTel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoTel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(labelEndereco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCEP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEstado)
                    .addComponent(campoEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCidade)
                    .addComponent(campoCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBairro)
                    .addComponent(campoBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelRua)
                    .addComponent(CampoRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelComplemento)
                        .addComponent(campoComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelN)
                        .addComponent(campoNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(218, Short.MAX_VALUE))
        );

        painelGuiasAluno.addTab("D. Pessoais", painelDadosPessoais);

        buttonGroup5.add(radioDP1);
        radioDP1.setText("Não encontrei emprego ou atividade remunerada");

        buttonGroup5.add(radioDP2);
        radioDP2.setText("Somente estudo");

        buttonGroup5.add(radioDP3);
        radioDP3.setText("Empregado com carteira assinada");

        buttonGroup5.add(radioDP4);
        radioDP4.setText("Empregado sem carteira assinada");

        buttonGroup5.add(radioDP5);
        radioDP5.setText("Profissional liberal ou tem próprio negócio");

        buttonGroup5.add(radioDP7);
        radioDP7.setText("Outro");
        radioDP7.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioDP7ItemStateChanged(evt);
            }
        });
        radioDP7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDP7ActionPerformed(evt);
            }
        });

        campoOutro.setEditable(false);

        buttonGroup5.add(radioDP6);
        radioDP6.setText("Nunca trabalhei");

        labelDadosEscolares.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDadosEscolares.setText("Dados escolares");

        labelDadosProfissionais.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDadosProfissionais.setText("Dados Profissionais");

        boxDadosEscolares.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ensino fundamental maior completo", "Ensino fundamental maior incompleto", "Ensino médio completo", "Ensino médio incompleto", "Nível superior completo", "Nível superior incompleto" }));

        javax.swing.GroupLayout painelDadosProfissionaisLayout = new javax.swing.GroupLayout(painelDadosProfissionais);
        painelDadosProfissionais.setLayout(painelDadosProfissionaisLayout);
        painelDadosProfissionaisLayout.setHorizontalGroup(
            painelDadosProfissionaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosProfissionaisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelDadosProfissionaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDadosEscolares, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelDadosProfissionais, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painelDadosProfissionaisLayout.createSequentialGroup()
                        .addGroup(painelDadosProfissionaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(boxDadosEscolares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radioDP1)
                            .addComponent(radioDP2)
                            .addComponent(radioDP3)
                            .addComponent(radioDP4)
                            .addComponent(radioDP5)
                            .addGroup(painelDadosProfissionaisLayout.createSequentialGroup()
                                .addComponent(radioDP7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoOutro, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(radioDP6))
                        .addGap(0, 435, Short.MAX_VALUE)))
                .addContainerGap())
        );
        painelDadosProfissionaisLayout.setVerticalGroup(
            painelDadosProfissionaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosProfissionaisLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelDadosEscolares)
                .addGap(18, 18, 18)
                .addComponent(boxDadosEscolares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelDadosProfissionais)
                .addGap(18, 18, 18)
                .addComponent(radioDP1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioDP2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioDP3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioDP4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioDP5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioDP6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelDadosProfissionaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioDP7)
                    .addComponent(campoOutro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(464, Short.MAX_VALUE))
        );

        painelGuiasAluno.addTab("D. Escolares e Profissionais", painelDadosProfissionais);

        labelNomeResponsavel.setText("Nome");

        labelCPFResponsavel.setText("CPF");

        labelRGResponsavel.setText("RG");

        botaoProximo.setText("Cadastrar");
        botaoProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoProximoActionPerformed(evt);
            }
        });

        jButtonVerificaRespCPF.setText("Verificar");
        jButtonVerificaRespCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerificaRespCPFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelDadosResponsavelLayout = new javax.swing.GroupLayout(painelDadosResponsavel);
        painelDadosResponsavel.setLayout(painelDadosResponsavelLayout);
        painelDadosResponsavelLayout.setHorizontalGroup(
            painelDadosResponsavelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosResponsavelLayout.createSequentialGroup()
                .addGroup(painelDadosResponsavelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelDadosResponsavelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(painelDadosResponsavelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelDadosResponsavelLayout.createSequentialGroup()
                                .addComponent(labelRGResponsavel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(campoRGResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelDadosResponsavelLayout.createSequentialGroup()
                                .addComponent(labelNomeResponsavel)
                                .addGap(18, 18, 18)
                                .addComponent(campoNomeResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(botaoProximo)))
                    .addGroup(painelDadosResponsavelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(labelCPFResponsavel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(campoCPFResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jButtonVerificaRespCPF)))
                .addContainerGap(396, Short.MAX_VALUE))
        );
        painelDadosResponsavelLayout.setVerticalGroup(
            painelDadosResponsavelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosResponsavelLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(painelDadosResponsavelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoCPFResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonVerificaRespCPF)
                    .addComponent(labelCPFResponsavel))
                .addGap(18, 18, 18)
                .addGroup(painelDadosResponsavelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRGResponsavel)
                    .addComponent(campoRGResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(painelDadosResponsavelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNomeResponsavel)
                    .addComponent(campoNomeResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoProximo)
                .addContainerGap(656, Short.MAX_VALUE))
        );

        painelGuiasAluno.addTab("D. do Responsável", painelDadosResponsavel);

        painelPrincipal.add(painelGuiasAluno, "painelGuiasAluno");

        labelTelefone1.setText("Telefone(s) para Contato");

        campoTelefone1Prof.setToolTipText("Telefone 1");

        campoTelefone2Prof.setToolTipText("Telefone 2");

        labelEndereco1.setText("Endereço");

        labelRua1.setText("Av./Rua");

        CampoRua1.setEditable(false);

        labelN1.setText("Nº");

        buttonGroupSexoProfessor.add(radioProfOutro);
        radioProfOutro.setText("Outro");

        labelComplemento1.setText("Complemento");

        labelBairro1.setText("Bairro");

        labelDataNascimento1.setText("Data de Nascimento");

        campoBairro1.setEditable(false);

        campoDataNascProf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));

        labelEstado1.setText("Estado");

        labelCPF1.setText("CPF");

        campoEstado1.setEditable(false);

        campoCPFProf.setToolTipText("");

        labelCidade1.setText("Cidade");

        labelRG1.setText("RG");

        campoRGProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoRGProfActionPerformed(evt);
            }
        });

        labelNome1.setText("Nome");

        campoNomeProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNomeProfActionPerformed(evt);
            }
        });

        labelSexo1.setText("Sexo");

        buttonGroupSexoProfessor.add(radioProfMasc);
        radioProfMasc.setText("Masculino");

        buttonGroupSexoProfessor.add(radioProfFem);
        radioProfFem.setText("Feminino");

        campoCidade1.setEditable(false);

        labelCEP1.setText("CEP");

        campoCepProf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoCepProfFocusLost(evt);
            }
        });
        campoCepProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCepProfActionPerformed(evt);
            }
        });

        botaoCadastroProf.setText("Cadastrar");
        botaoCadastroProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastroProfActionPerformed(evt);
            }
        });

        labelRGUFProf.setText("UF");

        javax.swing.GroupLayout painelCadastroProfessorLayout = new javax.swing.GroupLayout(painelCadastroProfessor);
        painelCadastroProfessor.setLayout(painelCadastroProfessorLayout);
        painelCadastroProfessorLayout.setHorizontalGroup(
            painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                        .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                                .addComponent(labelNome1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoNomeProf))
                            .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                                .addComponent(labelSexo1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioProfMasc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioProfFem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioProfOutro)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(21, 21, 21))
                    .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                        .addComponent(labelBairro1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoBairro1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelRua1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CampoRua1)
                        .addContainerGap())
                    .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                        .addComponent(labelN1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoNumProf, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(labelComplemento1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoComplementoProf, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE))
                    .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                        .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                                .addComponent(labelEstado1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoEstado1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelCidade1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoCidade1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(botaoCadastroProf))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                        .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                                .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCadastroProfessorLayout.createSequentialGroup()
                                        .addGap(205, 205, 205)
                                        .addComponent(labelRG1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(campoRGProf, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                                        .addComponent(labelCPF1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(campoCPFProf, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelRGUFProf)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoRGUFProf, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                                .addComponent(labelDataNascimento1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoDataNascProf, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                                .addComponent(labelCEP1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoCepProf, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelTelefone1)
                            .addComponent(campoTelefone1Prof, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                                .addGap(207, 207, 207)
                                .addComponent(campoTelefone2Prof, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelEndereco1))
                        .addContainerGap(360, Short.MAX_VALUE))))
        );
        painelCadastroProfessorLayout.setVerticalGroup(
            painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNome1)
                    .addComponent(campoNomeProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSexo1)
                    .addComponent(radioProfMasc)
                    .addComponent(radioProfFem)
                    .addComponent(radioProfOutro))
                .addGap(18, 18, 18)
                .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDataNascimento1)
                    .addComponent(campoDataNascProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCPF1)
                    .addComponent(labelRG1)
                    .addComponent(campoCPFProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoRGProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelRGUFProf)
                    .addComponent(campoRGUFProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(labelTelefone1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoTelefone2Prof, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoTelefone1Prof, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(labelEndereco1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoCepProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCEP1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEstado1)
                    .addComponent(campoEstado1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCidade1)
                    .addComponent(campoCidade1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBairro1)
                    .addComponent(campoBairro1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelRua1)
                    .addComponent(CampoRua1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelN1)
                    .addComponent(campoNumProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelComplemento1)
                    .addComponent(campoComplementoProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoCadastroProf)
                .addContainerGap(365, Short.MAX_VALUE))
        );

        painelPrincipal.add(painelCadastroProfessor, "painelCadastroProfessor");

        labelNomeCurso.setText("Nome do curso");

        botaoCadastrarCurso.setText("Cadastrar");
        botaoCadastrarCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastrarCursoActionPerformed(evt);
            }
        });

        botaoCadastrarTurma.setText("Cadastrar");
        botaoCadastrarTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastrarTurmaActionPerformed(evt);
            }
        });

        labelQntVagas.setText("Quantidade de vagas disponíveis para a turma");

        labelDiaTurma.setText("Informe o(s) dia(s) e hórario(s) de aula da turma");

        checkboxSegCursoTurma.setText("Segunda");
        checkboxSegCursoTurma.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkboxSegCursoTurmaItemStateChanged(evt);
            }
        });

        checkboxTerCursoTurma.setText("Terça");
        checkboxTerCursoTurma.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkboxTerCursoTurmaItemStateChanged(evt);
            }
        });

        checkboxQuaCursoTurma.setText("Quarta");
        checkboxQuaCursoTurma.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkboxQuaCursoTurmaItemStateChanged(evt);
            }
        });

        checkboxSexCursoTurma.setText("Sexta");
        checkboxSexCursoTurma.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkboxSexCursoTurmaItemStateChanged(evt);
            }
        });

        checkboxQuiCursoTurma.setText("Quinta");
        checkboxQuiCursoTurma.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkboxQuiCursoTurmaItemStateChanged(evt);
            }
        });

        checkboxSabCursoTurma.setText("Sábado");
        checkboxSabCursoTurma.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkboxSabCursoTurmaItemStateChanged(evt);
            }
        });

        campoHoraInicioSegCursoTurma.setEditable(false);
        campoHoraInicioSegCursoTurma.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        campoHoraFimSegCursoTurma.setEditable(false);
        campoHoraFimSegCursoTurma.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        campoHoraInicioTerCursoTurma.setEditable(false);
        campoHoraInicioTerCursoTurma.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        campoHoraFimTerCursoTurma.setEditable(false);
        campoHoraFimTerCursoTurma.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        campoHoraInicioQuaCursoTurma.setEditable(false);
        campoHoraInicioQuaCursoTurma.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        campoHoraFimQuaCursoTurma.setEditable(false);
        campoHoraFimQuaCursoTurma.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        campoHoraInicioQuiCursoTurma.setEditable(false);
        campoHoraInicioQuiCursoTurma.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        campoHoraFimQuiCursoTurma.setEditable(false);
        campoHoraFimQuiCursoTurma.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        campoHoraInicioSexCursoTurma.setEditable(false);
        campoHoraInicioSexCursoTurma.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        campoHoraFimSexCursoTurma.setEditable(false);
        campoHoraFimSexCursoTurma.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        campoHoraInicioSabCursoTurma.setEditable(false);
        campoHoraInicioSabCursoTurma.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        campoHoraFimSabCursoTurma.setEditable(false);
        campoHoraFimSabCursoTurma.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        jLabel2.setText("Carga Horária");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cadastrar curso");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Cadastrar turma");

        labelProfessorTurma.setText("Professor da turma");

        jLabel4.setText("Informe o curso");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Início");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Término");

        javax.swing.GroupLayout painelCursoTurmaLayout = new javax.swing.GroupLayout(painelCursoTurma);
        painelCursoTurma.setLayout(painelCursoTurmaLayout);
        painelCursoTurmaLayout.setHorizontalGroup(
            painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCursoTurmaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painelCursoTurmaLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(painelCursoTurmaLayout.createSequentialGroup()
                        .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botaoCadastrarTurma)
                            .addGroup(painelCursoTurmaLayout.createSequentialGroup()
                                .addComponent(labelQntVagas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(campoQntVagas, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelCursoTurmaLayout.createSequentialGroup()
                                .addComponent(labelProfessorTurma)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(boxProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelCursoTurmaLayout.createSequentialGroup()
                                .addComponent(labelNomeCurso)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoNomeCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelCursoTurmaLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(botaoCadastrarCurso)
                            .addComponent(labelDiaTurma)
                            .addGroup(painelCursoTurmaLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxCursos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelCursoTurmaLayout.createSequentialGroup()
                                .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(painelCursoTurmaLayout.createSequentialGroup()
                                            .addComponent(checkboxSabCursoTurma)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(campoHoraInicioSabCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(painelCursoTurmaLayout.createSequentialGroup()
                                            .addComponent(checkboxTerCursoTurma)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(campoHoraInicioTerCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelCursoTurmaLayout.createSequentialGroup()
                                            .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(checkboxQuaCursoTurma)
                                                .addComponent(checkboxSexCursoTurma))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(campoHoraInicioQuaCursoTurma, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(campoHoraInicioQuiCursoTurma, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(campoHoraInicioSexCursoTurma, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(checkboxQuiCursoTurma, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(painelCursoTurmaLayout.createSequentialGroup()
                                            .addComponent(checkboxSegCursoTurma)
                                            .addGap(18, 18, 18)
                                            .addComponent(campoHoraInicioSegCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoHoraFimSegCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoHoraFimTerCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoHoraFimQuaCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoHoraFimQuiCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoHoraFimSexCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoHoraFimSabCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 283, Short.MAX_VALUE))))
        );
        painelCursoTurmaLayout.setVerticalGroup(
            painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCursoTurmaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNomeCurso)
                    .addComponent(campoNomeCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(botaoCadastrarCurso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxCursos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(labelDiaTurma)
                .addGap(12, 12, 12)
                .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkboxSegCursoTurma)
                    .addComponent(campoHoraInicioSegCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoHoraFimSegCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkboxTerCursoTurma)
                    .addComponent(campoHoraInicioTerCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoHoraFimTerCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkboxQuaCursoTurma)
                    .addComponent(campoHoraInicioQuaCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoHoraFimQuaCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkboxQuiCursoTurma)
                    .addComponent(campoHoraInicioQuiCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoHoraFimQuiCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkboxSexCursoTurma)
                    .addComponent(campoHoraInicioSexCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoHoraFimSexCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkboxSabCursoTurma)
                    .addComponent(campoHoraInicioSabCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoHoraFimSabCursoTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelQntVagas)
                    .addComponent(campoQntVagas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelCursoTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelProfessorTurma)
                    .addComponent(boxProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(botaoCadastrarTurma)
                .addContainerGap(180, Short.MAX_VALUE))
        );

        painelPrincipal.add(painelCursoTurma, "painelCursoTurma");

        tableAluno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "CPF", "RG", "Matrícula"
            }
        ));
        scrollPaneTAluno.setViewportView(tableAluno);

        labelConsultaNomeAluno.setText("Nome");

        botaoConsultaAluno.setText("Consultar");
        botaoConsultaAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoConsultaAlunoActionPerformed(evt);
            }
        });

        campoConsultaNomeAluno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoConsultaNomeAlunoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoConsultaNomeAlunoFocusLost(evt);
            }
        });

        labelConsultaCPFAluno.setText("CPF");

        campoConsultaCPFAluno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoConsultaCPFAlunoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoConsultaCPFAlunoFocusLost(evt);
            }
        });

        labelConsultaRGAluno.setText("RG");

        campoConsultaRGAluno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoConsultaRGAlunoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoConsultaRGAlunoFocusLost(evt);
            }
        });

        labelConsultaMatAluno.setText("Matrícula");

        campoConsultaMatAluno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoConsultaMatAlunoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoConsultaMatAlunoFocusLost(evt);
            }
        });

        javax.swing.GroupLayout painelConsultaAlunoLayout = new javax.swing.GroupLayout(painelConsultaAluno);
        painelConsultaAluno.setLayout(painelConsultaAlunoLayout);
        painelConsultaAlunoLayout.setHorizontalGroup(
            painelConsultaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConsultaAlunoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelConsultaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelConsultaAlunoLayout.createSequentialGroup()
                        .addComponent(labelConsultaNomeAluno)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(painelConsultaAlunoLayout.createSequentialGroup()
                        .addGroup(painelConsultaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botaoConsultaAluno)
                            .addGroup(painelConsultaAlunoLayout.createSequentialGroup()
                                .addGroup(painelConsultaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelConsultaMatAluno)
                                    .addComponent(labelConsultaRGAluno)
                                    .addComponent(labelConsultaCPFAluno))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(painelConsultaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoConsultaRGAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoConsultaMatAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoConsultaCPFAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoConsultaNomeAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(scrollPaneTAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 256, Short.MAX_VALUE))))
        );
        painelConsultaAlunoLayout.setVerticalGroup(
            painelConsultaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConsultaAlunoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(painelConsultaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelConsultaNomeAluno)
                    .addComponent(campoConsultaNomeAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelConsultaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelConsultaCPFAluno)
                    .addComponent(campoConsultaCPFAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelConsultaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelConsultaRGAluno)
                    .addComponent(campoConsultaRGAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelConsultaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelConsultaMatAluno)
                    .addComponent(campoConsultaMatAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoConsultaAluno)
                .addGap(18, 18, 18)
                .addComponent(scrollPaneTAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(224, Short.MAX_VALUE))
        );

        painelPrincipal.add(painelConsultaAluno, "painelConsultaAluno");

        painelConsultaCursoTurmaAlunos.setPreferredSize(new java.awt.Dimension(545, 615));

        tableConsultarCursoTA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Código", "Nome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ScrollPaneCurso2.setViewportView(tableConsultarCursoTA);

        tableCTurma.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Total de vagas", "Horário de início", "Horário de termino", "Ano", "Semestre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ScrollPaneTurma2.setViewportView(tableCTurma);

        tableCTAluno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrollPaneAluno2.setViewportView(tableCTAluno);

        consultarCursoTA.setText("Consultar");
        consultarCursoTA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarCursoTAActionPerformed(evt);
            }
        });

        nomeCursoConsulta.setText("Curso");

        consultarConsultarCurso.setText("Consultar");

        labelCodCurso.setText("Código");

        botaoConsultarTurma.setText("Consultar");

        javax.swing.GroupLayout painelConsultaCursoTurmaAlunosLayout = new javax.swing.GroupLayout(painelConsultaCursoTurmaAlunos);
        painelConsultaCursoTurmaAlunos.setLayout(painelConsultaCursoTurmaAlunosLayout);
        painelConsultaCursoTurmaAlunosLayout.setHorizontalGroup(
            painelConsultaCursoTurmaAlunosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConsultaCursoTurmaAlunosLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(painelConsultaCursoTurmaAlunosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPaneAluno2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoConsultarTurma)
                    .addGroup(painelConsultaCursoTurmaAlunosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(consultarConsultarCurso)
                        .addComponent(ScrollPaneTurma2, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                        .addGroup(painelConsultaCursoTurmaAlunosLayout.createSequentialGroup()
                            .addComponent(nomeCursoConsulta)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(campoConsultarCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelCodCurso)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(campoCodCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(consultarCursoTA))
                        .addComponent(ScrollPaneCurso2)))
                .addContainerGap(182, Short.MAX_VALUE))
        );
        painelConsultaCursoTurmaAlunosLayout.setVerticalGroup(
            painelConsultaCursoTurmaAlunosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelConsultaCursoTurmaAlunosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelConsultaCursoTurmaAlunosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeCursoConsulta)
                    .addComponent(campoConsultarCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(consultarCursoTA)
                    .addComponent(labelCodCurso)
                    .addComponent(campoCodCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ScrollPaneCurso2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(consultarConsultarCurso)
                .addGap(18, 18, 18)
                .addComponent(ScrollPaneTurma2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoConsultarTurma)
                .addGap(18, 18, 18)
                .addComponent(scrollPaneAluno2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        painelPrincipal.add(painelConsultaCursoTurmaAlunos, "painelConsultaCursoTurma");

        tableAluno1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrollPaneTAluno1.setViewportView(tableAluno1);

        labelConsultaNomeAluno1.setText("Nome");

        botaoConsultaAluno1.setText("Consultar");

        campoConsultaNomeProfessor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoConsultaNomeProfessorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoConsultaNomeProfessorFocusLost(evt);
            }
        });

        labelConsultaCPFAluno1.setText("CPF");

        campoConsultaCPFProfessor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoConsultaCPFProfessorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoConsultaCPFProfessorFocusLost(evt);
            }
        });
        campoConsultaCPFProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoConsultaCPFProfessorActionPerformed(evt);
            }
        });

        labelConsultaRGAluno1.setText("RG");

        campoConsultaRGProfessor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoConsultaRGProfessorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoConsultaRGProfessorFocusLost(evt);
            }
        });

        labelConsultaMatAluno1.setText("Código");

        campoConsultaMatProfessor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoConsultaMatProfessorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoConsultaMatProfessorFocusLost(evt);
            }
        });

        javax.swing.GroupLayout painelConsultaProfessorLayout = new javax.swing.GroupLayout(painelConsultaProfessor);
        painelConsultaProfessor.setLayout(painelConsultaProfessorLayout);
        painelConsultaProfessorLayout.setHorizontalGroup(
            painelConsultaProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConsultaProfessorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelConsultaProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelConsultaProfessorLayout.createSequentialGroup()
                        .addComponent(labelConsultaNomeAluno1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(painelConsultaProfessorLayout.createSequentialGroup()
                        .addGroup(painelConsultaProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botaoConsultaAluno1)
                            .addGroup(painelConsultaProfessorLayout.createSequentialGroup()
                                .addGroup(painelConsultaProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelConsultaMatAluno1)
                                    .addComponent(labelConsultaRGAluno1)
                                    .addComponent(labelConsultaCPFAluno1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(painelConsultaProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoConsultaRGProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoConsultaCPFProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoConsultaNomeProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoConsultaMatProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(scrollPaneTAluno1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 256, Short.MAX_VALUE))))
        );
        painelConsultaProfessorLayout.setVerticalGroup(
            painelConsultaProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConsultaProfessorLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(painelConsultaProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelConsultaNomeAluno1)
                    .addComponent(campoConsultaNomeProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelConsultaProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelConsultaCPFAluno1)
                    .addComponent(campoConsultaCPFProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelConsultaProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelConsultaRGAluno1)
                    .addComponent(campoConsultaRGProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelConsultaProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelConsultaMatAluno1)
                    .addComponent(campoConsultaMatProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoConsultaAluno1)
                .addGap(18, 18, 18)
                .addComponent(scrollPaneTAluno1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(124, Short.MAX_VALUE))
        );

        painelPrincipal.add(painelConsultaProfessor, "painelConsultaProfessor");

        menuCadastrar.setText("Cadastrar");

        cadastrarAluno.setText("Cadastrar Aluno");
        cadastrarAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarAlunoActionPerformed(evt);
            }
        });
        menuCadastrar.add(cadastrarAluno);
        cadastrarAluno.getAccessibleContext().setAccessibleDescription("");

        cadastrarProfessor.setText("Cadastrar Professor");
        cadastrarProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarProfessorActionPerformed(evt);
            }
        });
        menuCadastrar.add(cadastrarProfessor);

        cadastrarCursoTurma.setText("Cadastrar Curso e Turma");
        cadastrarCursoTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarCursoTurmaActionPerformed(evt);
            }
        });
        menuCadastrar.add(cadastrarCursoTurma);

        barraMenu.add(menuCadastrar);

        menuConsultar.setText("Consultar");

        menuConsultarAlunos.setText("Consultar Alunos");
        menuConsultarAlunos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuConsultarAlunosActionPerformed(evt);
            }
        });
        menuConsultar.add(menuConsultarAlunos);

        menuConsultarProfessor.setText("Consultar Professor");
        menuConsultarProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuConsultarProfessorActionPerformed(evt);
            }
        });
        menuConsultar.add(menuConsultarProfessor);

        menuConsultarCursosTurmas.setText("Consultar Cursos/Turmas");
        menuConsultarCursosTurmas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuConsultarCursosTurmasActionPerformed(evt);
            }
        });
        menuConsultar.add(menuConsultarCursosTurmas);

        barraMenu.add(menuConsultar);

        setJMenuBar(barraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 762, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelPrincipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 740, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cidadeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cidadeBoxActionPerformed

    }//GEN-LAST:event_cidadeBoxActionPerformed

    private void estadoBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadoBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_estadoBoxActionPerformed

    private void estadoBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_estadoBoxItemStateChanged
        cidadeBox.removeAllItems();

        int idUF = 0;

        switch (estadoBox.getSelectedItem().toString()) {
            case "AC":
                idUF = 12;
                break;
            case "AL":
                idUF = 27;
                break;
            case "AP":
                idUF = 16;
                break;
            case "AM":
                idUF = 13;
                break;
            case "BA":
                idUF = 29;
                break;
            case "CE":
                idUF = 23;
                break;
            case "DF":
                idUF = 53;
                break;
            case "ES":
                idUF = 32;
                break;
            case "GO":
                idUF = 52;
                break;
            case "MA":
                idUF = 21;
                break;
            case "MT":
                idUF = 51;
                break;
            case "MS":
                idUF = 50;
                break;
            case "MG":
                idUF = 31;
                break;
            case "PA":
                idUF = 15;
                break;
            case "PB":
                idUF = 25;
                break;
            case "PR":
                idUF = 41;
                break;
            case "PE":
                idUF = 26;
                break;
            case "PI":
                idUF = 22;
                break;
            case "RJ":
                idUF = 33;
                break;
            case "RN":
                idUF = 24;
                break;
            case "RS":
                idUF = 43;
                break;
            case "RO":
                idUF = 11;
                break;
            case "RR":
                idUF = 14;
                break;
            case "SC":
                idUF = 42;
                break;
            case "SP":
                idUF = 35;
                break;
            case "SE":
                idUF = 28;
                break;
            case "TO":
                idUF = 17;
                break;
            case "Selecione um estado":
                cidadeBox.removeAllItems();
                break;
        }

        if (idUF > 0) {
            try {
                //URL API IBGE para municipios
                URL url = new URL("https://servicodados.ibge.gov.br/api/v1/localidades/estados/" + idUF + "/municipios");

                //JSON retornado para a variável jsonScanner. String criada com o JSON retornado
                Scanner jsonScanner = new Scanner(url.openStream());
                String jsonString = "";
                while (jsonScanner.hasNext()) {
                    jsonString += jsonScanner.nextLine();
                }

                //Parsing da String para JSON array. Assim é possível acessar as informações retornadas
                JSONArray jsonarray = new JSONArray(jsonString);
                List municipios = new ArrayList();
                for (int i = 0; i < jsonarray.length(); i++) {
                    JSONObject jsonobject = jsonarray.getJSONObject(i);
                    municipios.add(jsonobject.getString("nome"));
                }

                municipios.forEach((municipio) -> {
                    cidadeBox.addItem(municipio.toString());
                });
            } catch (IOException e) {
            }
        }
    }//GEN-LAST:event_estadoBoxItemStateChanged

    private void botaoProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoProximoActionPerformed

        Aluno aluno = new Aluno();
        Responsavel responsavel = new Responsavel();
        AlunoDAO alunoDAO = new AlunoDAO();
        ResponsavelDAO responsavelDAO = new ResponsavelDAO();

        if (campoNome.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o campo Nome");
        } else if (!radioMasc.isSelected() & !radioFem.isSelected() & !radioOutro.isSelected()) {
            JOptionPane.showMessageDialog(null, "Informe o sexo");
        } else if (estadoBox.getSelectedItem().toString().equals("Selecione um estado")) {
            JOptionPane.showMessageDialog(null, "Selecione um estado");
        } else if (campoDataNascimento.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o campo Data de nascimento");
        } else if (campoCPF.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o campo CPF");
        } else if (buttonGroup1.getSelection() == null) {
            JOptionPane.showMessageDialog(null, "Selecione o sexo");
        } else if (campoRG.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o campo RG");
        } else if (campoMae.getText().trim().equals("") && campoPai.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o campo com nome da mãe ou do pai");
        } else if (campoTel1.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o campo Telefone");
        } else if (campoCEP.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o campo CEP");
        } else if (campoNumero.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Informe o número da residência");
        } else if (!radioDP1.isSelected() & !radioDP2.isSelected() & !radioDP3.isSelected() & !radioDP4.isSelected() & !radioDP5.isSelected() & !radioDP7.isSelected()) {
            JOptionPane.showMessageDialog(null, "Informe os dados escolares");
        } else {
            aluno.setNome(campoNome.getText());
            aluno.setDatNasc(campoDataNascimento.getText());
            aluno.setCPF(campoCPF.getText());
            aluno.setRG(campoRG.getText());
            aluno.setNomeMae(campoMae.getText());
            aluno.setNomePai(campoPai.getText());
            aluno.setCEP(campoCEP.getText());
            aluno.setEstado(campoEstado.getText());
            aluno.setCidade(campoCidade.getText());
            aluno.setBairro(campoBairro.getText());
            aluno.setRua(CampoRua.getText());
            aluno.setFone1(campoTel1.getText());
            aluno.setCidadeNasc(cidadeBox.getSelectedItem().toString());
            aluno.setEstadoNasc(estadoBox.getSelectedItem().toString());
            aluno.setNumResidencia(Integer.parseInt(campoNumero.getText()));
            aluno.setDadosEscolaridade(boxDadosEscolares.getSelectedItem().toString());

            if (radioDP1.isSelected()) {
                aluno.setDadosProfissionais(radioDP1.getText());
            } else if (radioDP2.isSelected()) {
                aluno.setDadosProfissionais(radioDP2.getText());
            } else if (radioDP3.isSelected()) {
                aluno.setDadosProfissionais(radioDP3.getText());
            } else if (radioDP4.isSelected()) {
                aluno.setDadosProfissionais(radioDP4.getText());
            } else if (radioDP5.isSelected()) {
                aluno.setDadosProfissionais(radioDP5.getText());
            } else if (radioDP6.isSelected()) {
                aluno.setDadosProfissionais(radioDP6.getText());
            } else if (radioDP7.isSelected() && campoOutro.getText().trim().equals("")) {
                aluno.setDadosProfissionais(radioDP7.getText());
            } else if (radioDP7.isSelected() && !campoOutro.getText().trim().equals("")) {
                aluno.setDadosProfissionais(radioDP7.getText() + " - " + campoOutro.getText());
            } else {
                JOptionPane.showMessageDialog(null, "Informe dados profissionais");
            }

            if (radioMasc.isSelected()) {
                aluno.setSexo("M");
            }
            if (radioFem.isSelected()) {
                aluno.setSexo("F");
            }
            if (radioOutro.isSelected()) {
                aluno.setSexo("O");
            }

            /* labelNovoResponsavel é um texto invisível ao lado do campo de RG.
            Serve para indicar se será feito o cadastro de um novo responsável */
            if (setNovoResponsavel) {
                responsavel.setNome(campoNomeResponsavel.getText());
                responsavel.setCPF(campoCPFResponsavel.getText());
                responsavel.setRG(campoRGResponsavel.getText());

                responsavelDAO.save(responsavel);
                setNovoResponsavel = false;
            } else {
                responsavel.setCPF(campoCPFResponsavel.getText());
            }

            aluno.setResponsavel(responsavel);
            alunoDAO.save(aluno);
        }
    }//GEN-LAST:event_botaoProximoActionPerformed

    private void campoRGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoRGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoRGActionPerformed

    private void cadastrarAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarAlunoActionPerformed
        CardLayout cl = (CardLayout) painelPrincipal.getLayout();
        cl.show(painelPrincipal, "painelGuiasAluno");
    }//GEN-LAST:event_cadastrarAlunoActionPerformed

    private void cadastrarCursoTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarCursoTurmaActionPerformed
        CardLayout cl = (CardLayout) painelPrincipal.getLayout();
        cl.show(painelPrincipal, "painelCursoTurma");
    }//GEN-LAST:event_cadastrarCursoTurmaActionPerformed

    private void campoCEPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoCEPFocusLost
        if (!campoCEP.getText().equals("")) {
            try {
                ViaCEP viacep = new ViaCEP();
                viacep.buscar(campoCEP.getText().trim());
                campoEstado.setText(viacep.getUf());
                campoCidade.setText(viacep.getLocalidade());
                campoBairro.setText(viacep.getBairro());
                CampoRua.setText(viacep.getLogradouro());
            } catch (ViaCEPException ex) {
                campoEstado.setText("");
                campoCidade.setText("");
                campoBairro.setText("");
                CampoRua.setText("");
                Logger.getLogger(SistemaDeCadastro.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            campoEstado.setText("");
            campoCidade.setText("");
            campoBairro.setText("");
            CampoRua.setText("");
        }
    }//GEN-LAST:event_campoCEPFocusLost

    private void menuConsultarCursosTurmasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuConsultarCursosTurmasActionPerformed
        CardLayout cl = (CardLayout) painelPrincipal.getLayout();
        cl.show(painelPrincipal, "painelConsultaCursoTurma");
    }//GEN-LAST:event_menuConsultarCursosTurmasActionPerformed

    private void menuConsultarAlunosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuConsultarAlunosActionPerformed
        CardLayout cl = (CardLayout) painelPrincipal.getLayout();
        cl.show(painelPrincipal, "painelConsultaAluno");
    }//GEN-LAST:event_menuConsultarAlunosActionPerformed

    private void cadastrarProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarProfessorActionPerformed
        CardLayout cl = (CardLayout) painelPrincipal.getLayout();
        cl.show(painelPrincipal, "painelCadastroProfessor");
    }//GEN-LAST:event_cadastrarProfessorActionPerformed

    private void campoNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNomeActionPerformed

    private void menuConsultarProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuConsultarProfessorActionPerformed
        CardLayout cl = (CardLayout) painelPrincipal.getLayout();
        cl.show(painelPrincipal, "painelConsultaProfessor");
    }//GEN-LAST:event_menuConsultarProfessorActionPerformed

    private void campoConsultaCPFProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoConsultaCPFProfessorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoConsultaCPFProfessorActionPerformed

    private void campoCEPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoCEPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoCEPActionPerformed

    private void campoConsultaNomeProfessorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoConsultaNomeProfessorFocusGained
        if (campoConsultaCPFProfessor.getText().equals("") && campoConsultaRGProfessor.getText().equals("") && campoConsultaMatProfessor.getText().equals("")) {
            campoConsultaNomeProfessor.setEditable(true);
        }
    }//GEN-LAST:event_campoConsultaNomeProfessorFocusGained

    private void campoConsultaNomeProfessorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoConsultaNomeProfessorFocusLost
        if (!campoConsultaNomeProfessor.getText().equals("")) {
            campoConsultaCPFProfessor.setEditable(false);
            campoConsultaRGProfessor.setEditable(false);
            campoConsultaMatProfessor.setEditable(false);
        }
    }//GEN-LAST:event_campoConsultaNomeProfessorFocusLost

    private void campoConsultaCPFProfessorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoConsultaCPFProfessorFocusGained
        if (campoConsultaNomeProfessor.getText().equals("") && campoConsultaRGProfessor.getText().equals("") && campoConsultaMatProfessor.getText().equals("")) {
            campoConsultaCPFProfessor.setEditable(true);
        }
    }//GEN-LAST:event_campoConsultaCPFProfessorFocusGained

    private void campoConsultaCPFProfessorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoConsultaCPFProfessorFocusLost
        if (!campoConsultaCPFProfessor.getText().equals("")) {
            campoConsultaNomeProfessor.setEditable(false);
            campoConsultaRGProfessor.setEditable(false);
            campoConsultaMatProfessor.setEditable(false);
        }
    }//GEN-LAST:event_campoConsultaCPFProfessorFocusLost

    private void campoConsultaRGProfessorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoConsultaRGProfessorFocusGained
        if (campoConsultaNomeProfessor.getText().equals("") && campoConsultaCPFProfessor.getText().equals("") && campoConsultaMatProfessor.getText().equals("")) {
            campoConsultaRGProfessor.setEditable(true);
        }
    }//GEN-LAST:event_campoConsultaRGProfessorFocusGained

    private void campoConsultaRGProfessorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoConsultaRGProfessorFocusLost
        if (!campoConsultaRGProfessor.getText().equals("")) {
            campoConsultaNomeProfessor.setEditable(false);
            campoConsultaCPFProfessor.setEditable(false);
            campoConsultaMatProfessor.setEditable(false);
        }
    }//GEN-LAST:event_campoConsultaRGProfessorFocusLost

    private void campoConsultaMatProfessorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoConsultaMatProfessorFocusGained
        if (campoConsultaNomeProfessor.getText().equals("") && campoConsultaCPFProfessor.getText().equals("") && campoConsultaRGProfessor.getText().equals("")) {
            campoConsultaMatProfessor.setEditable(true);
        }
    }//GEN-LAST:event_campoConsultaMatProfessorFocusGained

    private void campoConsultaMatProfessorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoConsultaMatProfessorFocusLost
        if (!campoConsultaMatProfessor.getText().equals("")) {
            campoConsultaNomeProfessor.setEditable(false);
            campoConsultaCPFProfessor.setEditable(false);
            campoConsultaRGProfessor.setEditable(false);
        }
    }//GEN-LAST:event_campoConsultaMatProfessorFocusLost

    private void consultarCursoTAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarCursoTAActionPerformed

        readTable(campoConsultarCurso.getText().trim());
    }//GEN-LAST:event_consultarCursoTAActionPerformed

    private void campoConsultaNomeAlunoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoConsultaNomeAlunoFocusGained
        if (campoConsultaNomeAluno.getText().equals("") && campoConsultaCPFAluno.getText().equals("") && campoConsultaRGAluno.getText().equals("") && campoConsultaMatAluno.getText().equals("")) {
            campoConsultaNomeAluno.setEditable(true);
        }
    }//GEN-LAST:event_campoConsultaNomeAlunoFocusGained

    private void campoConsultaNomeAlunoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoConsultaNomeAlunoFocusLost
        if (!campoConsultaNomeAluno.getText().equals("")) {
            campoConsultaCPFAluno.setEditable(false);
            campoConsultaRGAluno.setEditable(false);
            campoConsultaMatAluno.setEditable(false);
        }
    }//GEN-LAST:event_campoConsultaNomeAlunoFocusLost

    private void campoConsultaCPFAlunoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoConsultaCPFAlunoFocusGained
        if (campoConsultaCPFAluno.getText().equals("") && campoConsultaNomeAluno.getText().equals("") && campoConsultaRGAluno.getText().equals("") && campoConsultaMatAluno.getText().equals("")) {
            campoConsultaCPFAluno.setEditable(true);
        }
    }//GEN-LAST:event_campoConsultaCPFAlunoFocusGained

    private void campoConsultaCPFAlunoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoConsultaCPFAlunoFocusLost
        if (!campoConsultaCPFAluno.getText().equals("")) {
            campoConsultaNomeAluno.setEditable(false);
            campoConsultaRGAluno.setEditable(false);
            campoConsultaMatAluno.setEditable(false);
        }
    }//GEN-LAST:event_campoConsultaCPFAlunoFocusLost

    private void campoConsultaRGAlunoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoConsultaRGAlunoFocusGained
        if (campoConsultaRGAluno.getText().equals("") && campoConsultaNomeAluno.getText().equals("") && campoConsultaCPFAluno.getText().equals("") && campoConsultaMatAluno.getText().equals("")) {
            campoConsultaRGAluno.setEditable(true);
        }
    }//GEN-LAST:event_campoConsultaRGAlunoFocusGained

    private void campoConsultaRGAlunoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoConsultaRGAlunoFocusLost
        if (!campoConsultaRGAluno.getText().equals("")) {
            campoConsultaNomeAluno.setEditable(false);
            campoConsultaCPFAluno.setEditable(false);
            campoConsultaMatAluno.setEditable(false);
        }
    }//GEN-LAST:event_campoConsultaRGAlunoFocusLost

    private void campoConsultaMatAlunoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoConsultaMatAlunoFocusGained
        if (campoConsultaMatAluno.getText().equals("") && campoConsultaNomeAluno.getText().equals("") && campoConsultaCPFAluno.getText().equals("") && campoConsultaRGAluno.getText().equals("")) {
            campoConsultaMatAluno.setEditable(true);
        }
    }//GEN-LAST:event_campoConsultaMatAlunoFocusGained

    private void campoConsultaMatAlunoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoConsultaMatAlunoFocusLost
        if (!campoConsultaMatAluno.getText().equals("")) {
            campoConsultaNomeAluno.setEditable(false);
            campoConsultaCPFAluno.setEditable(false);
            campoConsultaRGAluno.setEditable(false);
        }
    }//GEN-LAST:event_campoConsultaMatAlunoFocusLost

    private void botaoCadastrarTurmaActionPerformed(java.awt.event.ActionEvent evt) {
        Turma turma = new Turma();
        TurmaDAO turmaDAO = new TurmaDAO();
        //Checa se tem algum dia selecionado
        if (!checkboxSegCursoTurma.isSelected() && !checkboxTerCursoTurma.isSelected()
                && !checkboxQuaCursoTurma.isSelected() && !checkboxQuiCursoTurma.isSelected()
                && !checkboxSexCursoTurma.isSelected() && !checkboxSabCursoTurma.isSelected()) {
            JOptionPane.showMessageDialog(null, "Selecione um dia!");
            //checa se tem algum dia selecionado sem horário de inicio definido
            //seg
        } else if (checkboxSegCursoTurma.isSelected() && campoHoraInicioSegCursoTurma.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Defina horário de início da Segunda!");
            //ter
        } else if (checkboxTerCursoTurma.isSelected() && campoHoraInicioTerCursoTurma.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Defina horário de início da Terça!");
            //qua
        } else if (checkboxQuaCursoTurma.isSelected() && campoHoraInicioQuaCursoTurma.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Defina horário de início da Quarta!");
            //qui
        } else if (checkboxQuiCursoTurma.isSelected() && campoHoraInicioQuiCursoTurma.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Defina horário de início da Quinta!");
            //sex
        } else if (checkboxSexCursoTurma.isSelected() && campoHoraInicioSexCursoTurma.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Defina horário de início da Sexta!");
            //sab
        } else if (checkboxSabCursoTurma.isSelected() && campoHoraInicioSabCursoTurma.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Defina horário de início do Sábado!");
            //checa se tem algum dia selecionado sem horario de término definido
            //seg
        } else if (checkboxSegCursoTurma.isSelected() && campoHoraFimSegCursoTurma.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Defina horário de término da Segunda!");
            //ter
        } else if (checkboxTerCursoTurma.isSelected() && campoHoraFimTerCursoTurma.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Defina horário de término da Terça!");
            //qua
        } else if (checkboxQuaCursoTurma.isSelected() && campoHoraFimQuaCursoTurma.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Defina horário de término da Quarta!");
            //qui
        } else if (checkboxQuiCursoTurma.isSelected() && campoHoraFimQuiCursoTurma.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Defina horário de término da Quinta!");
            //sex
        } else if (checkboxSexCursoTurma.isSelected() && campoHoraFimSexCursoTurma.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Defina horário de término da Sexta!");
            //sab
        } else if (checkboxSabCursoTurma.isSelected() && campoHoraFimSabCursoTurma.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Defina horário de término do Sábado!");
            //checa se o total de vagas foi definido
        } else if (campoQntVagas.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Defina o total de vagas da turma!");
        } else {
            //adiciona os dias no ArrayList dias, horaInicio e horaFim
            if (checkboxSegCursoTurma.isSelected()) {
                turma.addDia(checkboxSegCursoTurma.getText());
                try {
                    turma.setHoraInicio(campoHoraInicioSegCursoTurma.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(SistemaDeCadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    turma.setHoraFim(campoHoraFimSegCursoTurma.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(SistemaDeCadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (checkboxTerCursoTurma.isSelected()) {
                turma.addDia(checkboxTerCursoTurma.getText());
                try {
                    turma.setHoraInicio(campoHoraInicioTerCursoTurma.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(SistemaDeCadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    turma.setHoraFim(campoHoraFimTerCursoTurma.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(SistemaDeCadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (checkboxQuaCursoTurma.isSelected()) {
                turma.addDia(checkboxQuaCursoTurma.getText());
                try {
                    turma.setHoraInicio(campoHoraInicioQuaCursoTurma.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(SistemaDeCadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    turma.setHoraFim(campoHoraFimQuaCursoTurma.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(SistemaDeCadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (checkboxQuiCursoTurma.isSelected()) {
                turma.addDia(checkboxQuiCursoTurma.getText());
                try {
                    turma.setHoraInicio(campoHoraInicioQuiCursoTurma.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(SistemaDeCadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    turma.setHoraFim(campoHoraFimQuiCursoTurma.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(SistemaDeCadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (checkboxSexCursoTurma.isSelected()) {
                turma.addDia(checkboxSexCursoTurma.getText());
                try {
                    turma.setHoraInicio(campoHoraInicioSexCursoTurma.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(SistemaDeCadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    turma.setHoraFim(campoHoraFimSexCursoTurma.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(SistemaDeCadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (checkboxSabCursoTurma.isSelected()) {
                turma.addDia(checkboxSabCursoTurma.getText());
                try {
                    turma.setHoraInicio(campoHoraInicioSabCursoTurma.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(SistemaDeCadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    turma.setHoraFim(campoHoraFimSabCursoTurma.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(SistemaDeCadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            turma.setTotVagas(Integer.parseInt(campoQntVagas.getText()));

            String s = boxProfessor.getSelectedItem().toString();
            int i = Integer.parseInt(s.replaceAll("[^\\d.]", ""));

            turma.setCodProf(i);

            s = jComboBoxCursos.getSelectedItem().toString();
            i = Integer.parseInt(s.replaceAll("[^\\d.]", ""));

            turma.setCodCurso(i);

            turmaDAO.save(turma);
            JOptionPane.showMessageDialog(null, "Turma cadastrada com sucesso.");
        }
    }

    private void botaoCadastrarCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCadastrarCursoActionPerformed
        Curso curso = new Curso();
        CursoDAO cursoDAO = new CursoDAO();
        if (campoNomeCurso.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o campo com o nome do curso");
        } else {
            curso.setNomeCurso(campoNomeCurso.getText());
            curso.setCargaHoraria(Integer.parseInt(jTextField1.getText()));
            cursoDAO.save(curso);
        }

        try {
            jComboBoxCursos.removeAllItems();
            Class.forName("com.mysql.jdbc.Driver");

            Connection connection = DriverManager.getConnection("jdbc:mysql://192.168.0.26:3306/cvt?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC&autoReconnect=true&useSSL=false",
                    "sergipetec", "Sergipetec@@2010");

            Statement statement = connection.createStatement();
            String query = "SELECT * FROM Cursos";
            ResultSet rs = statement.executeQuery(query);

            while (rs.next()) {
                String st = rs.getString("nomeCurso");
                jComboBoxCursos.addItem(st);
            }//end while

            connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_botaoCadastrarCursoActionPerformed

    private void campoRGProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoRGProfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoRGProfActionPerformed

    private void campoNomeProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNomeProfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNomeProfActionPerformed

    private void campoCepProfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoCepProfFocusLost
        if (!campoCepProf.getText().equals("")) {
            try {
                ViaCEP viacep = new ViaCEP();
                viacep.buscar(campoCepProf.getText().trim());
                campoEstado1.setText(viacep.getUf());
                campoCidade1.setText(viacep.getLocalidade());
                campoBairro1.setText(viacep.getBairro());
                CampoRua1.setText(viacep.getLogradouro());
            } catch (ViaCEPException ex) {
                campoEstado1.setText("");
                campoCidade1.setText("");
                campoBairro1.setText("");
                CampoRua1.setText("");
                Logger.getLogger(SistemaDeCadastro.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            campoEstado1.setText("");
            campoCidade1.setText("");
            campoBairro1.setText("");
            CampoRua1.setText("");
        }
    }//GEN-LAST:event_campoCepProfFocusLost

    private void campoCepProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoCepProfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoCepProfActionPerformed

    private void botaoCadastroProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCadastroProfActionPerformed
        Professor professor = new Professor();
        ProfessorDAO professorDAO = new ProfessorDAO();
        if (campoNomeProf.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o campo Nome");
        } else if (buttonGroupSexoProfessor.getSelection() == null) {
            JOptionPane.showMessageDialog(null, "Selecione o sexo");
        } else if (campoDataNascProf.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha a data de nascimento");
        } else if (campoCPFProf.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o campo CPF");
        } else if (campoRGProf.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o campo RG");
        } else if (campoRGUFProf.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o campo UF");
        } else if (campoTelefone1Prof.getText().trim().equals("") && campoTelefone2Prof.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Informe um telefone para contato");
        } else if (campoCepProf.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o campo CEP");
        } else if (campoNumProf.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o número da residência");
        } else {
            professor.setNome(campoNome.getText());
            professor.setCPF(campoCPFProf.getText());
            professor.setRG(campoRGProf.getText());
            professor.setRGUF(campoRGUFProf.getText());
            professor.setFone1(campoTelefone1Prof.getText());
            if (radioProfMasc.isSelected()) {
                professor.setSexo("M");
            } else if (radioProfFem.isSelected()) {
                professor.setSexo("F");
            } else {
                professor.setSexo("O");
            }
            professor.setDatNasc(campoDataNascProf.getText());
            professor.setCEP(campoCepProf.getText());
            professor.setNumResidencia(Integer.parseInt(campoNumProf.getText()));
            professor.setComplemento(campoComplementoProf.getText());

            if (!campoTelefone2Prof.getText().isEmpty()) {
                professor.setFone2(campoTelefone2Prof.getText());
            }
            boolean profCadastrado = professorDAO.save(professor);
            if (profCadastrado) {
                JOptionPane.showMessageDialog(null, "Professor cadastrado");
            } else {
                JOptionPane.showMessageDialog(null, "Professor não cadastrado. Ocorreu um erro");
            }
        }

        try {
            Class.forName("com.mysql.jdbc.Driver");

            Connection connection = DriverManager.getConnection("jdbc:mysql://192.168.0.26:3306/cvt?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC&autoReconnect=true&useSSL=false",
                    "sergipetec", "Sergipetec@@2010");

            Statement statement = connection.createStatement();
            String query = "SELECT * FROM Professores";
            ResultSet rs = statement.executeQuery(query);

            while (rs.next()) {
                String st = rs.getString("nome");
                boxProfessor.addItem(st);
            }//end while

            connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_botaoCadastroProfActionPerformed

    private void checkboxSegCursoTurmaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkboxSegCursoTurmaItemStateChanged
        if (checkboxSegCursoTurma.isSelected()) {
            campoHoraInicioSegCursoTurma.setEditable(true);
            campoHoraFimSegCursoTurma.setEditable(true);
        } else {
            campoHoraInicioSegCursoTurma.setEditable(false);
            campoHoraFimSegCursoTurma.setEditable(false);
        }
    }//GEN-LAST:event_checkboxSegCursoTurmaItemStateChanged

    private void checkboxTerCursoTurmaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkboxTerCursoTurmaItemStateChanged
        if (checkboxTerCursoTurma.isSelected()) {
            campoHoraInicioTerCursoTurma.setEditable(true);
            campoHoraFimTerCursoTurma.setEditable(true);
        } else {
            campoHoraInicioTerCursoTurma.setEditable(false);
            campoHoraFimTerCursoTurma.setEditable(false);
        }
    }//GEN-LAST:event_checkboxTerCursoTurmaItemStateChanged

    private void checkboxQuaCursoTurmaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkboxQuaCursoTurmaItemStateChanged
        if (checkboxQuaCursoTurma.isSelected()) {
            campoHoraInicioQuaCursoTurma.setEditable(true);
            campoHoraFimQuaCursoTurma.setEditable(true);
        } else {
            campoHoraInicioQuaCursoTurma.setEditable(false);
            campoHoraFimQuaCursoTurma.setEditable(false);
        }
    }//GEN-LAST:event_checkboxQuaCursoTurmaItemStateChanged

    private void checkboxQuiCursoTurmaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkboxQuiCursoTurmaItemStateChanged
        if (checkboxQuiCursoTurma.isSelected()) {
            campoHoraInicioQuiCursoTurma.setEditable(true);
            campoHoraFimQuiCursoTurma.setEditable(true);
        } else {
            campoHoraInicioQuiCursoTurma.setEditable(false);
            campoHoraFimQuiCursoTurma.setEditable(false);
        }
    }//GEN-LAST:event_checkboxQuiCursoTurmaItemStateChanged

    private void checkboxSexCursoTurmaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkboxSexCursoTurmaItemStateChanged
        if (checkboxSexCursoTurma.isSelected()) {
            campoHoraInicioSexCursoTurma.setEditable(true);
            campoHoraFimSexCursoTurma.setEditable(true);
        } else {
            campoHoraInicioSexCursoTurma.setEditable(false);
            campoHoraFimSexCursoTurma.setEditable(false);
        }
    }//GEN-LAST:event_checkboxSexCursoTurmaItemStateChanged

    private void checkboxSabCursoTurmaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkboxSabCursoTurmaItemStateChanged
        if (checkboxSabCursoTurma.isSelected()) {
            campoHoraInicioSabCursoTurma.setEditable(true);
            campoHoraFimSabCursoTurma.setEditable(true);
        } else {
            campoHoraInicioSabCursoTurma.setEditable(false);
            campoHoraFimSabCursoTurma.setEditable(false);
        }
    }//GEN-LAST:event_checkboxSabCursoTurmaItemStateChanged

    private void radioOutroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioOutroItemStateChanged

    }//GEN-LAST:event_radioOutroItemStateChanged

    private void radioOutroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioOutroActionPerformed

    }//GEN-LAST:event_radioOutroActionPerformed

    private void radioOutroStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_radioOutroStateChanged

    }//GEN-LAST:event_radioOutroStateChanged

    private void radioDP7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDP7ActionPerformed

    }//GEN-LAST:event_radioDP7ActionPerformed

    private void radioDP7ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioDP7ItemStateChanged
        if (radioDP7.isSelected()) {
            campoOutro.setEditable(true);
        } else {
            campoOutro.setEditable(false);
        }
    }//GEN-LAST:event_radioDP7ItemStateChanged

    private void jButtonVerificaRespCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerificaRespCPFActionPerformed
        ConnectionFactory connFactory = new ConnectionFactory();
        Connection conn = connFactory.getConnection();

        try {
            PreparedStatement stmt = conn.prepareStatement("SELECT * FROM Responsaveis WHERE CPF = ?");
            stmt.setString(1, campoCPFResponsavel.getText());

            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                rs.first();
                String nomeResponsavel = rs.getString("nome");
                String rgResponsavel = rs.getString("rg");

                campoNomeResponsavel.setText(nomeResponsavel);
                campoNomeResponsavel.setEditable(false);
                campoRGResponsavel.setText(rgResponsavel);
                campoRGResponsavel.setEditable(false);
                setNovoResponsavel = false;
            } else {
                setNovoResponsavel = true;
                campoNomeResponsavel.setEditable(true);
                campoRGResponsavel.setEditable(true);
                JOptionPane.showMessageDialog(null, "CPF de responsável não cadastrado. Cadastre um novo.");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButtonVerificaRespCPFActionPerformed

    private void botaoConsultaAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoConsultaAlunoActionPerformed
        DefaultTableModel table = (DefaultTableModel)tableAluno.getModel();
        Object[] row = new Object[4];
        ArrayList<Aluno> alunoLista = new ArrayList<>();
        table.setRowCount(0);
        boolean hasWhere = false;
        try {
            Class.forName("com.mysql.jdbc.Driver");
             
            Connection connection = DriverManager.getConnection("jdbc:mysql://192.168.0.26:3306/cvt?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC&autoReconnect=true&useSSL=false",
                     "sergipetec", "Sergipetec@@2010");

            Statement statement = connection.createStatement();
            String query = "SELECT * FROM Alunos \n";
            
            if(!campoConsultaNomeAluno.getText().trim().equals("")){
                query += "WHERE nome like '%" + campoConsultaNomeAluno.getText()+"%'\n";
                hasWhere = true;
            }
            if(!campoConsultaCPFAluno.getText().trim().equals("")){
                if(hasWhere){
                    query += "AND CPF = " + campoConsultaCPFAluno.getText();
                } else {
                    query += "WHERE CPF = " + campoConsultaCPFAluno.getText();
                    hasWhere = true;
                }
            }
            if(!campoConsultaRGAluno.getText().trim().equals("")){
                if(hasWhere){
                    query += "AND RG = " + campoConsultaRGAluno.getText();
                } else {
                    query += "WHERE RG = " + campoConsultaRGAluno.getText();
                    hasWhere = true;
                }
            }
            if(!campoConsultaMatAluno.getText().trim().equals("")){
                if(hasWhere){
                    query += "AND matricula = " + campoConsultaMatAluno.getText();
                } else {
                    query += "WHERE matricula = " + campoConsultaMatAluno.getText();
                    hasWhere = true;
                }
            }
            
            if(campoConsultaNomeAluno.getText().trim().equals("")){
                if(campoConsultaCPFAluno.getText().trim().equals("")){
                    if(campoConsultaRGAluno.getText().trim().equals("")){
                        if(campoConsultaMatAluno.getText().trim().equals("")){
                            //print erro
                        }   
                    }
                }
            }
            
            ResultSet rs = statement.executeQuery(query);
            Aluno aluno;
            
            while (rs.next()){
                aluno = new Aluno();
                aluno.setNome(rs.getString("nome"));
                aluno.setCPF(rs.getString("CPF"));
                aluno.setRG(rs.getString("RG"));
                aluno.setMatricula(rs.getInt("matricula"));
                alunoLista.add(aluno);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        

        
        for(int i = 0; i < alunoLista.size(); i++){
            row[0] = alunoLista.get(i).getNome();
            row[1] = alunoLista.get(i).getCPF();
            row[2] = alunoLista.get(i).getRG();
            row[3] = alunoLista.get(i).getMatricula();
            table.addRow(row);
        }
    }//GEN-LAST:event_botaoConsultaAlunoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SistemaDeCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SistemaDeCadastro().setVisible(true);
        });
    }

    //<editor-fold defaultstate="collapsed" desc="Declaração de variáveis"> 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CampoRua;
    private javax.swing.JTextField CampoRua1;
    private javax.swing.JScrollPane ScrollPaneCurso2;
    private javax.swing.JScrollPane ScrollPaneTurma2;
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JToggleButton botaoCadastrarCurso;
    private javax.swing.JToggleButton botaoCadastrarTurma;
    private javax.swing.JButton botaoCadastroProf;
    private javax.swing.JButton botaoConsultaAluno;
    private javax.swing.JButton botaoConsultaAluno1;
    private javax.swing.JToggleButton botaoConsultarTurma;
    private javax.swing.JButton botaoProximo;
    private javax.swing.JComboBox<String> boxDadosEscolares;
    private javax.swing.JComboBox<String> boxProfessor;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroupSexoProfessor;
    private javax.swing.JMenuItem cadastrarAluno;
    private javax.swing.JMenuItem cadastrarCursoTurma;
    private javax.swing.JMenuItem cadastrarProfessor;
    private javax.swing.JTextField campoBairro;
    private javax.swing.JTextField campoBairro1;
    private javax.swing.JTextField campoCEP;
    private javax.swing.JTextField campoCPF;
    private javax.swing.JTextField campoCPFProf;
    private javax.swing.JTextField campoCPFResponsavel;
    private javax.swing.JTextField campoCepProf;
    private javax.swing.JTextField campoCidade;
    private javax.swing.JTextField campoCidade1;
    private javax.swing.JTextField campoCodCurso;
    private javax.swing.JTextField campoComplemento;
    private javax.swing.JTextField campoComplementoProf;
    private javax.swing.JTextField campoConsultaCPFAluno;
    private javax.swing.JTextField campoConsultaCPFProfessor;
    private javax.swing.JTextField campoConsultaMatAluno;
    private javax.swing.JTextField campoConsultaMatProfessor;
    private javax.swing.JTextField campoConsultaNomeAluno;
    private javax.swing.JTextField campoConsultaNomeProfessor;
    private javax.swing.JTextField campoConsultaRGAluno;
    private javax.swing.JTextField campoConsultaRGProfessor;
    private javax.swing.JTextField campoConsultarCurso;
    private javax.swing.JFormattedTextField campoDataNascProf;
    private javax.swing.JFormattedTextField campoDataNascimento;
    private javax.swing.JTextField campoEstado;
    private javax.swing.JTextField campoEstado1;
    private javax.swing.JFormattedTextField campoHoraFimQuaCursoTurma;
    private javax.swing.JFormattedTextField campoHoraFimQuiCursoTurma;
    private javax.swing.JFormattedTextField campoHoraFimSabCursoTurma;
    private javax.swing.JFormattedTextField campoHoraFimSegCursoTurma;
    private javax.swing.JFormattedTextField campoHoraFimSexCursoTurma;
    private javax.swing.JFormattedTextField campoHoraFimTerCursoTurma;
    private javax.swing.JFormattedTextField campoHoraInicioQuaCursoTurma;
    private javax.swing.JFormattedTextField campoHoraInicioQuiCursoTurma;
    private javax.swing.JFormattedTextField campoHoraInicioSabCursoTurma;
    private javax.swing.JFormattedTextField campoHoraInicioSegCursoTurma;
    private javax.swing.JFormattedTextField campoHoraInicioSexCursoTurma;
    private javax.swing.JFormattedTextField campoHoraInicioTerCursoTurma;
    private javax.swing.JTextField campoMae;
    private javax.swing.JTextField campoNome;
    private javax.swing.JTextField campoNomeCurso;
    private javax.swing.JTextField campoNomeProf;
    private javax.swing.JTextField campoNomeResponsavel;
    private javax.swing.JTextField campoNumProf;
    private javax.swing.JTextField campoNumero;
    private javax.swing.JTextField campoOutro;
    private javax.swing.JTextField campoPai;
    private javax.swing.JTextField campoQntVagas;
    private javax.swing.JTextField campoRG;
    private javax.swing.JTextField campoRGProf;
    private javax.swing.JTextField campoRGResponsavel;
    private javax.swing.JTextField campoRGUFProf;
    private javax.swing.JTextField campoTel1;
    private javax.swing.JTextField campoTel2;
    private javax.swing.JTextField campoTelefone1Prof;
    private javax.swing.JTextField campoTelefone2Prof;
    private javax.swing.JCheckBox checkboxQuaCursoTurma;
    private javax.swing.JCheckBox checkboxQuiCursoTurma;
    private javax.swing.JCheckBox checkboxSabCursoTurma;
    private javax.swing.JCheckBox checkboxSegCursoTurma;
    private javax.swing.JCheckBox checkboxSexCursoTurma;
    private javax.swing.JCheckBox checkboxTerCursoTurma;
    private javax.swing.JComboBox<String> cidadeBox;
    private javax.swing.JButton consultarConsultarCurso;
    private javax.swing.JButton consultarCursoTA;
    private javax.swing.JComboBox<String> estadoBox;
    private javax.swing.JButton jButtonVerificaRespCPF;
    private javax.swing.JComboBox<String> jComboBoxCursos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel labelBairro;
    private javax.swing.JLabel labelBairro1;
    private javax.swing.JLabel labelCEP;
    private javax.swing.JLabel labelCEP1;
    private javax.swing.JLabel labelCPF;
    private javax.swing.JLabel labelCPF1;
    private javax.swing.JLabel labelCPFResponsavel;
    private javax.swing.JLabel labelCidade;
    private javax.swing.JLabel labelCidade1;
    private javax.swing.JLabel labelCodCurso;
    private javax.swing.JLabel labelComplemento;
    private javax.swing.JLabel labelComplemento1;
    private javax.swing.JLabel labelConsultaCPFAluno;
    private javax.swing.JLabel labelConsultaCPFAluno1;
    private javax.swing.JLabel labelConsultaMatAluno;
    private javax.swing.JLabel labelConsultaMatAluno1;
    private javax.swing.JLabel labelConsultaNomeAluno;
    private javax.swing.JLabel labelConsultaNomeAluno1;
    private javax.swing.JLabel labelConsultaRGAluno;
    private javax.swing.JLabel labelConsultaRGAluno1;
    private javax.swing.JLabel labelDadosEscolares;
    private javax.swing.JLabel labelDadosProfissionais;
    private javax.swing.JLabel labelDataNascimento;
    private javax.swing.JLabel labelDataNascimento1;
    private javax.swing.JLabel labelDiaTurma;
    private javax.swing.JLabel labelEndereco;
    private javax.swing.JLabel labelEndereco1;
    private javax.swing.JLabel labelEstado;
    private javax.swing.JLabel labelEstado1;
    private javax.swing.JLabel labelFiliacao;
    private javax.swing.JLabel labelMae;
    private javax.swing.JLabel labelN;
    private javax.swing.JLabel labelN1;
    private javax.swing.JLabel labelNaturalidade;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelNome1;
    private javax.swing.JLabel labelNomeCurso;
    private javax.swing.JLabel labelNomeResponsavel;
    private javax.swing.JLabel labelPai;
    private javax.swing.JLabel labelProfessorTurma;
    private javax.swing.JLabel labelQntVagas;
    private javax.swing.JLabel labelRG;
    private javax.swing.JLabel labelRG1;
    private javax.swing.JLabel labelRGResponsavel;
    private javax.swing.JLabel labelRGUFProf;
    private javax.swing.JLabel labelRua;
    private javax.swing.JLabel labelRua1;
    private javax.swing.JLabel labelSexo;
    private javax.swing.JLabel labelSexo1;
    private javax.swing.JLabel labelTelefone;
    private javax.swing.JLabel labelTelefone1;
    private javax.swing.JMenu menuCadastrar;
    private javax.swing.JMenu menuConsultar;
    private javax.swing.JMenuItem menuConsultarAlunos;
    private javax.swing.JMenuItem menuConsultarCursosTurmas;
    private javax.swing.JMenuItem menuConsultarProfessor;
    private javax.swing.JLabel nomeCursoConsulta;
    private javax.swing.JPanel painelCadastroProfessor;
    private javax.swing.JPanel painelConsultaAluno;
    private javax.swing.JPanel painelConsultaCursoTurmaAlunos;
    private javax.swing.JPanel painelConsultaProfessor;
    private javax.swing.JPanel painelCursoTurma;
    private javax.swing.JPanel painelDadosPessoais;
    private javax.swing.JPanel painelDadosProfissionais;
    private javax.swing.JPanel painelDadosResponsavel;
    private javax.swing.JTabbedPane painelGuiasAluno;
    private javax.swing.JPanel painelPrincipal;
    private javax.swing.JRadioButton radioDP1;
    private javax.swing.JRadioButton radioDP2;
    private javax.swing.JRadioButton radioDP3;
    private javax.swing.JRadioButton radioDP4;
    private javax.swing.JRadioButton radioDP5;
    private javax.swing.JRadioButton radioDP6;
    private javax.swing.JRadioButton radioDP7;
    private javax.swing.JRadioButton radioFem;
    private javax.swing.JRadioButton radioMasc;
    private javax.swing.JRadioButton radioOutro;
    private javax.swing.JRadioButton radioProfFem;
    private javax.swing.JRadioButton radioProfMasc;
    private javax.swing.JRadioButton radioProfOutro;
    private javax.swing.JScrollPane scrollPaneAluno2;
    private javax.swing.JScrollPane scrollPaneTAluno;
    private javax.swing.JScrollPane scrollPaneTAluno1;
    private javax.swing.JTable tableAluno;
    private javax.swing.JTable tableAluno1;
    private javax.swing.JTable tableCTAluno;
    private javax.swing.JTable tableCTurma;
    private javax.swing.JTable tableConsultarCursoTA;
    // End of variables declaration//GEN-END:variables
    // </editor-fold>
}
